{"version":3,"sources":["components/Header.js","components/LoginForm.js","components/RegisterForm.js","components/RegisterAction.js","components/Token.js","components/ApiDoc.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","LoginForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleUsernameChange","event","setState","usernameLogin","target","value","handlePasswordChange","passwordLogin","handleFormSubmit","preventDefault","onLoginSubmit","state","onSubmit","type","placeholder","id","onChange","Component","RegisterForm","usernameRegister","passwordRegister","onRegisterSubmit","RegisterAction","registrationStatus","axios","post","email","concat","password","then","response","status","_this2","console","log","_context","t0","prevProps","prevState","register","Token","authToken","data","token","logIn","renderTokenDetails","renderEmptyState","ApiDoc","requestHeadline","requestType","requestUrl","propOneParam","propOneVal","propOneDescription","propOneDType","propTwoParam","propTwoVal","propTwoDescription","propTwoDType","Footer","App","username","components_Header","components_LoginForm","components_RegisterForm","components_RegisterAction","components_Token","components_ApiDoc","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f0ce233.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n\treturn (\n\t\t<header className=\"Header__Component wrapper\">\n\t\t\t<h1>Party Animals Developer</h1>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      usernameLogin: '',\n      passwordLogin: ''\n    }\n  }\n\n  handleUsernameChange = (event) => {\n    this.setState({\n      usernameLogin: event.target.value\n    });\n  }\n\n  handlePasswordChange = (event) => {\n    this.setState({\n      passwordLogin: event.target.value\n    });\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onLoginSubmit(this.state.usernameLogin, this.state.passwordLogin);\n  }\n\n  render() {\n    return (\n      <div className=\"Auth__Component\">\n        <h4>Sign In</h4>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>\n            Username\n          </label>\n          <input\n            type=\"email\"\n            placeholder=\"example@gmail.com\"\n            id=\"usernameLogin\"\n            value={this.state.usernameLogin}\n            onChange={this.handleUsernameChange}\n          />\n          <label>\n            Password\n          </label>\n          <input\n            type=\"password\"\n            placeholder=\"********\"\n            id=\"passwordLogin\"\n            value={this.state.passwordLogin}\n            onChange={this.handlePasswordChange}\n          />\n          <input type=\"submit\" />\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usernameRegister: \"\",\n      passwordRegister: \"\"\n    };\n  }\n\n  handleUsernameChange = event => {\n    this.setState({\n      usernameRegister: event.target.value\n    });\n  };\n\n  handlePasswordChange = event => {\n    this.setState({\n      passwordRegister: event.target.value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.props.onRegisterSubmit(\n      this.state.usernameRegister,\n      this.state.passwordRegister\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"Auth__Component\">\n        <h4>Register</h4>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username</label>\n          <input\n            type=\"email\"\n            placeholder=\"example@gmail.com\"\n            id=\"usernameRegister\"\n            value={this.state.usernameRegister}\n            onChange={this.handleUsernameChange}\n          />\n          <label>Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"********\"\n            id=\"passwordRegister\"\n            value={this.state.passwordRegister}\n            onChange={this.handlePasswordChange}\n          />\n          <input type=\"submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass RegisterAction extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      registrationStatus: false\n    }\n  }\n\n  async register() {\n    try {\n      await axios.post('https://partyanimals.hackeryou.com/api/v1/account/register', {\n        email: `${this.props.usernameRegister}`,\n        password: `${this.props.passwordRegister}`\n      }).then(response => {\n        if (response.status === 200) {\n          this.setState({\n            registrationStatus: true\n          });\n        }\n      });\n    } catch (error) {\n      console.log('Error ' + error);\n    }\n  }\n\n  renderRegisterDetails() {\n    return(<div></div>)\n  }\n\n  renderEmptyState() {\n    return(<div><p>Please complete your registration to be able to login</p></div>)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.usernameRegister && this.props.passwordRegister && this.props.usernameRegister !== prevProps.usernameRegister &&\n      this.props.passwordRegister !== prevProps.passwordRegister) {\n      this.register();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"display-none\">\n      </div>\n    )\n  }\n\n}\n\nexport default RegisterAction;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Token extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tauthToken: ''\n\t\t}\n\t}\n\n\tasync logIn() {\n\t\ttry {\n\t\t\tawait axios.post('https://partyanimals.hackeryou.com/api/v1/account/login', {\n\t\t\t\temail: `${this.props.usernameLogin}`,\n\t\t\t\tpassword: `${this.props.passwordLogin}`\n\t\t\t}).then(response => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tauthToken: response.data.token\n\t\t\t\t})\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log('Error ' + error);\n\t\t}\n\t}\n\n\trenderTokenDetails() {\n\t\treturn (<div><p className=\"token-details\">{this.state.authToken}</p></div>)\n\t}\n\n\trenderEmptyState() {\n\t\treturn(<div><p className=\"token-details\">Please complete your login to see your auth token</p></div>)\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (this.props.usernameLogin && this.props.passwordLogin && this.props.usernameLogin !== prevProps.usernameLogin &&\n\t\t\tthis.props.passwordLogin !== prevProps.passwordLogin) {\n\t\t\tthis.logIn();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Token__Component wrapper\">\n\t\t\t\t<h2>Token Details</h2>\n\t\t\t\t{this.props.usernameLogin ? this.renderTokenDetails() : this.renderEmptyState()}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default Token;\n","import React from 'react';\n\nconst ApiDoc = (props) => {\n\treturn (\n\t\t<div className=\"ApiDoc__Component\">\n\t\t\t<h5 className=\"requestHeadline\">{props.requestHeadline}</h5>\n\t\t\t<div className=\"requestUrlContainer\">\n\t\t\t\t<h5 className=\"requestType\">{props.requestType}</h5>\n\t\t\t\t<h5 className=\"requestURL\">{props.requestUrl}</h5>\n\t\t\t</div>\n\t\t\t<h5>Parameters:</h5>\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Parameter</th>\n\t\t\t\t\t\t<th>Value</th>\n\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t\t<th className=\"unseen\">Data Type</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>{props.propOneParam}</td>\n\t\t\t\t\t\t<td>{props.propOneVal}</td>\n\t\t\t\t\t\t<td>{props.propOneDescription}</td>\n\t\t\t\t\t\t<td className=\"unseen\">{props.propOneDType}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>{props.propTwoParam}</td>\n\t\t\t\t\t\t<td>{props.propTwoVal}</td>\n\t\t\t\t\t\t<td>{props.propTwoDescription}</td>\n\t\t\t\t\t\t<td className=\"unseen\">{props.propTwoDType}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<h5>Sample Response</h5>\n\t\t\t<p>{`{Test: myTest}`}</p>\n\t\t</div>\n\t);\n}\n\nexport default ApiDoc;\n","import React from 'react';\n\nfunction Footer(props) {\n\treturn (<footer className=\"Footer__Component\">Designed by Fatima Gueye</footer>)\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header.js\";\nimport LoginForm from \"./components/LoginForm.js\";\nimport RegisterForm from \"./components/RegisterForm.js\";\nimport RegisterAction from \"./components/RegisterAction.js\";\nimport Token from \"./components/Token.js\";\nimport ApiDoc from \"./components/ApiDoc.js\";\nimport Footer from \"./components/Footer.js\";\nimport \"./styles/styles.scss\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usernameLogin: \"\",\n      usernameRegister: \"\",\n      passwordLogin: \"\",\n      passwordRegister: \"\"\n    };\n  }\n\n  onLoginSubmit = (username, password) => {\n    this.setState({\n      usernameLogin: username,\n      passwordLogin: password\n    });\n  };\n\n  onRegisterSubmit = (username, password) => {\n    this.setState({\n      usernameRegister: username,\n      passwordRegister: password\n    });\n  };\n\n  render() {\n    return (\n      <body>\n        <Header />\n        <section className=\"forms wrapper\">\n          <LoginForm onLoginSubmit={this.onLoginSubmit} />\n          <RegisterForm onRegisterSubmit={this.onRegisterSubmit} />\n          <RegisterAction\n            usernameRegister={this.state.usernameRegister}\n            passwordRegister={this.state.passwordRegister}\n          />\n        </section>\n        <Token\n          usernameLogin={this.state.usernameLogin}\n          passwordLogin={this.state.passwordLogin}\n        />\n        <section className=\"apiDoc wrapper\">\n          <h3>Venue</h3>\n          <ApiDoc\n            requestType=\"GET\"\n            requestHeadline=\"Get All Venues\"\n            requestUrl=\"http://localhost:3005/v1/venue/\"\n            propOneParam=\"key\"\n            propOneVal=\"your api key\"\n            propOneDescription=\"required\"\n            propOneDType=\"string\"\n          />\n          <ApiDoc\n            requestType=\"GET\"\n            requestHeadline=\"Get Venue By ID\"\n            requestUrl=\"http://localhost:3005/v1/venue/id\"\n            propOneParam=\"key\"\n            propOneVal=\"your api key\"\n            propOneDescription=\"required\"\n            propOneDType=\"string\"\n          />\n        </section>\n        <section className=\"apiDoc wrapper\">\n          <h3>Animal</h3>\n          <ApiDoc\n            requestType=\"GET\"\n            requestHeadline=\"Get Animals for Specific Venue\"\n            requestUrl=\"http://localhost:3005/v1/venue/animals/id\"\n            propOneParam=\"key\"\n            propOneVal=\"your api key\"\n            propOneDescription=\"required\"\n            propOneDType=\"string\"\n          />\n        </section>\n        <Footer />\n      </body>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}